// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/micro/federation-srv/proto/federation/federation.proto

/*
Package federation is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/federation-srv/proto/federation/federation.proto

It has these top-level messages:
	Config
	Topic
	Plugin
	Broker
	ConfigRequest
	ConfigResponse
*/
package federation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Topics  map[string]*Topic  `protobuf:"bytes,1,rep,name=topics" json:"topics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Brokers map[string]*Broker `protobuf:"bytes,2,rep,name=brokers" json:"brokers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetTopics() map[string]*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *Config) GetBrokers() map[string]*Broker {
	if m != nil {
		return m.Brokers
	}
	return nil
}

type Topic struct {
	Rate      float64  `protobuf:"fixed64,1,opt,name=rate" json:"rate,omitempty"`
	Publish   []string `protobuf:"bytes,2,rep,name=publish" json:"publish,omitempty"`
	Subscribe []string `protobuf:"bytes,3,rep,name=subscribe" json:"subscribe,omitempty"`
}

func (m *Topic) Reset()                    { *m = Topic{} }
func (m *Topic) String() string            { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()               {}
func (*Topic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Topic) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Topic) GetPublish() []string {
	if m != nil {
		return m.Publish
	}
	return nil
}

func (m *Topic) GetSubscribe() []string {
	if m != nil {
		return m.Subscribe
	}
	return nil
}

type Plugin struct {
	Hosts []string `protobuf:"bytes,2,rep,name=hosts" json:"hosts,omitempty"`
}

func (m *Plugin) Reset()                    { *m = Plugin{} }
func (m *Plugin) String() string            { return proto.CompactTextString(m) }
func (*Plugin) ProtoMessage()               {}
func (*Plugin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Plugin) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type Broker struct {
	Plugins map[string]*Plugin `protobuf:"bytes,1,rep,name=plugins" json:"plugins,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Broker) Reset()                    { *m = Broker{} }
func (m *Broker) String() string            { return proto.CompactTextString(m) }
func (*Broker) ProtoMessage()               {}
func (*Broker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Broker) GetPlugins() map[string]*Plugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

type ConfigRequest struct {
}

func (m *ConfigRequest) Reset()                    { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()               {}
func (*ConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ConfigResponse struct {
	Config *Config `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *ConfigResponse) Reset()                    { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()               {}
func (*ConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConfigResponse) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "Config")
	proto.RegisterType((*Topic)(nil), "Topic")
	proto.RegisterType((*Plugin)(nil), "Plugin")
	proto.RegisterType((*Broker)(nil), "Broker")
	proto.RegisterType((*ConfigRequest)(nil), "ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "ConfigResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Federation service

type FederationClient interface {
	Config(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
}

type federationClient struct {
	cc *grpc.ClientConn
}

func NewFederationClient(cc *grpc.ClientConn) FederationClient {
	return &federationClient{cc}
}

func (c *federationClient) Config(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := grpc.Invoke(ctx, "/Federation/Config", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Federation service

type FederationServer interface {
	Config(context.Context, *ConfigRequest) (*ConfigResponse, error)
}

func RegisterFederationServer(s *grpc.Server, srv FederationServer) {
	s.RegisterService(&_Federation_serviceDesc, srv)
}

func _Federation_Config_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).Config(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Federation/Config",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).Config(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Federation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Federation",
	HandlerType: (*FederationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Config",
			Handler:    _Federation_Config_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/micro/federation-srv/proto/federation/federation.proto",
}

func init() {
	proto.RegisterFile("github.com/micro/federation-srv/proto/federation/federation.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4f, 0x32, 0x31,
	0x10, 0xc6, 0xdf, 0xc2, 0x4b, 0x09, 0x83, 0x82, 0xa9, 0x1c, 0x36, 0x04, 0x95, 0xec, 0x89, 0xc4,
	0x58, 0x22, 0x5e, 0xd4, 0x1b, 0x12, 0x3d, 0x9b, 0xd5, 0x2f, 0xc0, 0xae, 0x05, 0x1a, 0x60, 0xbb,
	0xb6, 0x5d, 0x12, 0x0e, 0x7e, 0x64, 0xbf, 0x83, 0xd9, 0xfe, 0xd1, 0x92, 0x78, 0xf0, 0x36, 0x7d,
	0xe6, 0x99, 0xdf, 0xce, 0xcc, 0x0e, 0x4c, 0x97, 0x5c, 0xaf, 0xca, 0x94, 0x66, 0x62, 0x3b, 0xde,
	0xf2, 0x4c, 0x8a, 0xf1, 0x82, 0xbd, 0x31, 0x39, 0xd7, 0x5c, 0xe4, 0x57, 0x4a, 0xee, 0xc6, 0x85,
	0x14, 0x3a, 0x14, 0x83, 0x90, 0x9a, 0x5c, 0xfc, 0x89, 0x00, 0xcf, 0x44, 0xbe, 0xe0, 0x4b, 0x72,
	0x09, 0x58, 0x8b, 0x82, 0x67, 0x2a, 0x42, 0xc3, 0xfa, 0xa8, 0x3d, 0x39, 0xa5, 0x36, 0x41, 0x5f,
	0x8d, 0xfa, 0x98, 0x6b, 0xb9, 0x4f, 0x9c, 0x85, 0x50, 0x68, 0xa6, 0x52, 0xac, 0x99, 0x54, 0x51,
	0xcd, 0xb8, 0x7b, 0xde, 0xfd, 0x60, 0x65, 0x6b, 0xf7, 0xa6, 0xfe, 0x14, 0xda, 0x01, 0x86, 0x9c,
	0x40, 0x7d, 0xcd, 0xf6, 0x11, 0x1a, 0xa2, 0x51, 0x2b, 0xa9, 0x42, 0x32, 0x80, 0xc6, 0x6e, 0xbe,
	0x29, 0x59, 0x54, 0x1b, 0xa2, 0x51, 0x7b, 0x82, 0xed, 0x57, 0x13, 0x2b, 0xde, 0xd7, 0x6e, 0x51,
	0x7f, 0x06, 0x47, 0x21, 0xfb, 0x17, 0xc6, 0xd9, 0x21, 0xa3, 0xe9, 0x7a, 0x09, 0x20, 0xf1, 0x0b,
	0x34, 0x0c, 0x98, 0x10, 0xf8, 0x2f, 0xe7, 0x9a, 0x99, 0x72, 0x94, 0x98, 0x98, 0x44, 0xd0, 0x2c,
	0xca, 0x74, 0xc3, 0xd5, 0xca, 0x0c, 0xd5, 0x4a, 0xfc, 0x93, 0x0c, 0xa0, 0xa5, 0xca, 0x54, 0x65,
	0x92, 0xa7, 0x2c, 0xaa, 0x9b, 0xdc, 0x8f, 0x10, 0x9f, 0x03, 0x7e, 0xde, 0x94, 0x4b, 0x9e, 0x93,
	0x1e, 0x34, 0x56, 0x42, 0x69, 0xe5, 0xea, 0xed, 0x23, 0xfe, 0x00, 0x6c, 0x3b, 0xa9, 0xd6, 0x56,
	0x18, 0xa7, 0x5f, 0x72, 0xcf, 0xf5, 0x48, 0x2d, 0xc0, 0xaf, 0xcd, 0x99, 0xaa, 0x99, 0xc3, 0xc4,
	0x5f, 0x66, 0xb6, 0xfe, 0x70, 0xe6, 0x2e, 0x1c, 0xdb, 0x7f, 0x93, 0xb0, 0xf7, 0x92, 0x29, 0x1d,
	0x5f, 0x43, 0xc7, 0x0b, 0xaa, 0x10, 0xb9, 0x62, 0xe4, 0x02, 0x70, 0x66, 0x14, 0x83, 0xae, 0x30,
	0xce, 0xe0, 0xe4, 0xc9, 0x1d, 0xc0, 0xd3, 0xf7, 0xed, 0x54, 0xa7, 0xe2, 0x8e, 0xa6, 0x43, 0x0f,
	0xd0, 0xfd, 0x2e, 0x3d, 0x24, 0xc7, 0xff, 0x52, 0x6c, 0x2e, 0xed, 0xe6, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0xff, 0xd7, 0x53, 0x94, 0xae, 0x02, 0x00, 0x00,
}
